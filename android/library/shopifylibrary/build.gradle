apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'jacoco-android'

group = 'com.github.rubygarage'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
    profile {
debuggable true
        jniDebuggable false
    }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled false
    xml.enabled true
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    // implementation 'com.github.rubygarage:shopapp-android:1.0.5'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation 'com.shopify.mobilebuysdk:buy3:3.2.4'
    implementation 'com.jakewharton.timber:timber:4.7.0'
    //implementation 'joda-time:joda-time:2.10.1'
    implementation 'net.danlew:android.joda:2.10.1'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    api project(':gateway')
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

project.afterEvaluate {
    android.libraryVariants.all { variant ->
//        def realVariantName = variant.name
//        def variantName = variant.name.capitalize()

//        def task = project.tasks["jacocoTest${variantName}UnitTestReport"]
        /*def defaultExcludes = task.classDirectories.excludes*/

//        def additionalExcludes = [
//            'com/shopify/buy3/**/*'
//        ]

//        def excludes = defaultExcludes + additionalExcludes

//        def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/${realVariantName}", excludes: excludes)

        /*task.classDirectories.excludes = excludes*/
//        task.classDirectories += kotlinDebugTree
    }
}
